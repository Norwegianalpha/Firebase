# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: mailchimp-extension
version: 0.1.0
specVersion: v1beta

displayName: Firebase Mailchimp Extension
description:
  Adds new users from Firebase Authentication to a specified Mailchimp audience.

license: Apache-2.0

sourceUrl: https://github.com/firebase/extensions/tree/master/auth-mailchimp-sync
releaseNotesUrl: https://github.com/firebase/extensions/blob/master/auth-mailchimp-sync/CHANGELOG.md

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Lauren Long
    url: https://github.com/laurenzlong
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca
  - authorName: Invertase
    email: oss@invertase.io
    url: https://github.com/invertase

billingRequired: true

resources:
  - name: addUserToList
    type: firebaseextensions.v1beta.function
    description:
      Listens for new user accounts (as managed by Firebase Authentication),
      then automatically adds the new user to your specified MailChimp audience.
    properties:
      location: ${LOCATION}
      runtime: nodejs10
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.create
        resource: projects/${PROJECT_ID}

  - name: removeUserFromList
    type: firebaseextensions.v1beta.function
    description:
      Listens for existing user accounts to be deleted (as managed by Firebase
      Authentication), then automatically removes them from your specified
      MailChimp audience.
    properties:
      location: ${LOCATION}
      runtime: nodejs10
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.delete
        resource: projects/${PROJECT_ID}

  - name: tagsHandler
    type: firebaseextensions.v1beta.function
    description:
      Tags provide the ability to associate "metadata" or "labels" with a Mailchimp subscriber.
      The tagsHandler function listens for write events on a specified firebase path and treats the 
      document data as Mailchimp subscriber tags.
    properties:
      location: ${LOCATION}
      runtime: nodejs10
      eventTrigger:
        eventType: providers/firestore/DcoumentBuilder/onWrite
        resource: projects/${PROJECT_ID}

  - name: mergeFieldsHandler
    type: firebaseextensions.v1beta.function
    description:
      Merge fields provide the ability to create new properties that can be associated with Mailchimp subscriber.
      The mergeFieldsHandler function listens for write events on a specific firebase document and automatically uses
      the document data to populate the subscriber's respective merge fields.
    properties:
      location: ${LOCATION}
      runtime: nodejs10
      eventTrigger:
        eventType: providers/firestore/DcoumentBuilder/onWrite
        resource: projects/${PROJECT_ID}

  - name: memberEventsHandler
    type: firebaseextensions.v1beta.function
    description:
      Member events are Mailchimp specific activity events that can be created and associated with a predefined action.
      The memberEventsHandler function listens for write events on a specific firebase document and automatically uses
      the document data to create a mailchimp event on the specified subscriber's profile.
    properties:
      location: ${LOCATION}
      runtime: nodejs10
      eventTrigger:
        eventType: providers/firestore/DcoumentBuilder/onWrite
        resource: projects/${PROJECT_ID}

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: MAILCHIMP_API_KEY
    label: Mailchimp API key
    description: >-
      What is your Mailchimp API key? To obtain a Mailchimp API key, go to your
      [Mailchimp account](https://storage.googleapis.com/firebase-mailchimp/index.html).
    type: string
    example: a1b2c3d4e5f6g7
    required: true

  - param: MAILCHIMP_AUDIENCE_ID
    label: Audience ID
    description: >-
      What is the Mailchimp Audience ID to which you want to subscribe new
      users? To find your Audience ID: visit https://admin.mailchimp.com/lists,
      click on the desired audience or create a new audience, then select
      **Settings**. Look for **Audience ID** (for example, `27735fc60a`).
    type: string
    example: 1ab2345c67
    required: true

  - param: MAILCHIMP_CONTACT_STATUS
    label: Contact status
    description: >-
      When the extension adds a new user to the Mailchimp audience, what is
      their initial status? This value can be `subscribed` or `pending`.
      `subscribed` means the user can receive campaigns; `pending` means the
      user still needs to opt-in to receive campaigns.
    type: select
    options:
      - label: Subscribed
        value: subscribed
      - label: Pending
        value: pending
    default: subscribed
    required: true

  - param: FIREBASE_MEMBER_TAGS_CONFIG
    type: string
    label: Firebase Member Tags Config
    description: >-
      Provide a JSON configuration specifying which events in Firebase the extension 
      should listen on to associate Mailchimp member tags to a subscriber. To learn more,
      reference the [setup docs](https://github.com/firebase/extensions/blob/master/auth-mailchimp-sync/README.md).
    example: '{"watch": "users/{id}", "memberTags": ["meta", "role"], "email": "email"}'
    required: false

  - param: FIREBASE_MERGE_FIELDS_CONFIG
    type: string
    label: Firebase Merge Fields Config
    description: >-
      Provide a JSON configuration specifying which events in Firebase the extension 
      should listen on to associate document data with a subscriber's merge fields. To learn more,
      reference the [setup docs](https://github.com/firebase/extensions/blob/master/auth-mailchimp-sync/README.md).
    example: '{"watch": "users/{id}", "mergeFields": {"firstName": "FNAME", "phoneNumber": "PHONE", "role": "ROLE"}, "email": "email"}'
    required: false

  - param: FIREBASE_MEMBER_EVENTS_CONFIG
    type: string
    label: Firebase Member Events Config
    description: >-
      Provide a JSON configuration specifying which events in Firebase the extension 
      should listen on to associate document data with a particular event on the subscriber's profile. To learn more,
      reference the [setup docs](https://github.com/firebase/extensions/blob/master/auth-mailchimp-sync/README.md).
    example: '{"watch": "users/{id}", "memberEvents": ["mailchimpEvents"], "email": "email"}'
    required: false
